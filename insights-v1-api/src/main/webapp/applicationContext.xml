<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<mvc:annotation-driven />

	<context:component-scan base-package="org.gooru.insights.api">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	</context:component-scan>

	<context:annotation-config />


	<!-- schduler for removing files -->
	<bean id="excelReportController"
		class="org.gooru.insights.api.controllers.ExcelReportController" />

	<bean id="firstTaskJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="excelReportController" />
		<property name="targetMethod" value="removeExpiredFiles" />
	</bean>

	<!-- Cron Trigger -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="firstTaskJobDetail" />
		<property name="cronExpression" value="0 0 12 * * ?" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="firstTaskJobDetail" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" /><!-- use cronTrigger instead of simpleTrigger -->
			</list>
		</property>
	</bean>


	<bean id="tomcatUsername" class="java.lang.String">
		<constructor-arg>
			<value>${tomcat.username}</value>
		</constructor-arg>
	</bean>

	<bean id="tomcatPassword" class="java.lang.String">
		<constructor-arg>
			<value>${tomcat.password}</value>
		</constructor-arg>
	</bean>

	<bean id="gooruConstants"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="gooruConfigStyleBuild">15060115</prop>
				<prop key="insights.api.rest.endpoint">${insights.api.rest.endpoint}</prop>
			</props>
		</property>
	</bean>
 <bean id="filePath"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="insights.file.app.path">//insights.goorulearning.org/repository/</prop>
				<prop key="insights.s3.bucket.path"></prop>
				<prop key="insights.nfs.bucket.path">http://d1lkwrtg12r0i3.cloudfront.net/prod1/</prop>
				<prop key="insights.profile.url.path">http://profile-demo.s3.amazonaws.com/profile-prod/id.png</prop>
				<prop key="insights.file.real.path">/home/gooruapp/gooru-insights/reports/</prop>
			</props>
		</property>
	</bean>
	<bean id="cassandra"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="cluster.name">gooru-cassandra-prod</prop>
				<prop key="cluster.hosts">54.193.233.64:9160</prop>
				<prop key="log.keyspace">event_logger_insights</prop>
				<prop key="log.datacentre">us-west</prop>

			</props>
		</property>
	</bean>
 
	<!-- Redis configuration -->
	<bean id="redisLongTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="redisStringTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="port" value="6379" />
		<property name="hostName" value="50.18.46.20" />
	</bean>
	
	<!-- Mailer configuration -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="reports@goorulearning.org" />
		<property name="password" value="insights@2013" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">false</prop>
			</props>
		</property>
	</bean>

	<!-- some pre-configured messages also which are ready to send -->
	<bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="to" value="kumaraswamy@goorulearning.org"></property>
		<property name="from" value="reports@goorulearning.org"></property>
		<property name="subject" value="FATAL - Application crash. Save your job !!" />
	</bean>

	<!-- default Mailer configuration -->
	<bean id="defaultMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="reports@goorulearning.org" />
		<property name="password" value="insights@2013" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">false</prop>
			</props>
		</property>
	</bean>

</beans>
